name: Publish Docker image to Docker Hub & GHCR on Release

on:
  release:
    types: [published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      ## Login Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      ## Login GHCR
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      ## Generate Metadata
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/mail-archiver
            ghcr.io/${{ github.repository_owner }}/mail-archiver
          tags: |
            type=raw,value=latest
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVEL: detailed

      ## Build & Push Images
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      ## Manifest-File
      - name: Create image manifest file
        run: echo "${{ steps.meta.outputs.tags }}" > docker-image-tags.txt

      ## Artefakt upload
      - name: Upload manifest artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-tags
          path: docker-image-tags.txt

      ## Release-Info
      - name: Update Release Notes
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const release_id = context.payload.release.id;
            const new_body = `## Container Images\n
            Docker Hub: docker.io/${process.env.DOCKERHUB_USERNAME}/mail-archiver:${context.payload.release.tag_name}\n
            GHCR: ghcr.io/${context.repo.owner}/mail-archiver:${context.payload.release.tag_name}\n\n
            ${context.payload.release.body}`;
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release_id,
              body: new_body
            });
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}