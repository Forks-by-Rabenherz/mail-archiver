@model MailArchiver.Models.ViewModels.MailAccountViewModel
@{
    ViewData["Title"] = "Delete Email Account";
    var emailCount = ViewBag.EmailCount ?? 0;
}
<div class="container">
    <h1 class="text-danger">
        <i class="bi bi-exclamation-triangle-fill me-2"></i>
        Delete Email Account
    </h1>
    
    <div class="alert alert-danger">
        <h4>⚠️ PERMANENT DELETION WARNING</h4>
        <p><strong>You are about to permanently delete this email account and ALL its archived emails.</strong></p>
        
        <div class="row mt-3">
            <div class="col-md-6">
                <h6>What will be deleted:</h6>
                <ul class="mb-0">
                    <li>Account configuration and settings</li>
                    <li>All @emailCount.ToString("N0") archived emails</li>
                    <li>All email attachments and content</li>
                    <li>Synchronization history</li>
                </ul>
            </div>
            <div class="col-md-6">
                <h6>This action:</h6>
                <ul class="mb-0">
                    <li><strong>Cannot be undone</strong></li>
                    <li><strong>Cannot be recovered</strong></li>
                    <li>Will free up database storage space</li>
                    <li>Will stop all synchronization for this account</li>
                </ul>
            </div>
        </div>
        
        <div class="mt-3 p-2 bg-white rounded border">
            <small class="text-muted">
                <strong>Alternative:</strong> If you only want to stop email synchronization without losing data, 
                you can <a asp-action="Edit" asp-route-id="@Model.Id" class="text-decoration-none">disable the account instead</a>.
            </small>
        </div>
    </div>

    <div class="card">
        <div class="card-header bg-light">
            <h5 class="mb-0">Account to be deleted</h5>
        </div>
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-3">Name</dt>
                <dd class="col-sm-9"><strong>@Model.Name</strong></dd>
                <dt class="col-sm-3">Email Address</dt>
                <dd class="col-sm-9"><strong>@Model.EmailAddress</strong></dd>
                <dt class="col-sm-3">Status</dt>
                <dd class="col-sm-9">
                    @if (Model.IsEnabled)
                    {
                        <span class="badge bg-success">Active</span>
                    }
                    else
                    {
                        <span class="badge bg-secondary">Inactive</span>
                    }
                </dd>
                <dt class="col-sm-3">Archived Emails</dt>
                <dd class="col-sm-9">
                    <span class="badge bg-danger fs-6">@emailCount.ToString("N0") emails will be deleted</span>
                </dd>
            </dl>
        </div>
    </div>

    <!-- Confirmation Form -->
    <div class="card mt-4 border-danger">
        <div class="card-header bg-danger text-white">
            <h5 class="mb-0">Final Confirmation</h5>
        </div>
        <div class="card-body">
            <div class="form-check mb-3">
                <input class="form-check-input" type="checkbox" id="confirmDeletion" required>
                <label class="form-check-label" for="confirmDeletion">
                    <strong>I understand that this action will permanently delete the account "@Model.Name" and all @emailCount.ToString("N0") archived emails. This action cannot be undone.</strong>
                </label>
            </div>
            
            <div class="d-flex gap-3 justify-content-between flex-column flex-md-row">
                <div class="d-flex gap-2">
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left"></i> Cancel - Keep Account
                    </a>
                    
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
                        <i class="bi bi-pause"></i> Disable Instead
                    </a>
                </div>
                
                <form asp-action="Delete" method="post" id="deleteForm">
                    <input type="hidden" asp-for="Id" />
                    <button type="submit" class="btn btn-danger" id="deleteButton" disabled>
                        <i class="bi bi-trash-fill"></i> 
                        PERMANENTLY DELETE ACCOUNT & @emailCount.ToString("N0") EMAILS
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const confirmCheckbox = document.getElementById('confirmDeletion');
            const deleteButton = document.getElementById('deleteButton');
            const deleteForm = document.getElementById('deleteForm');
            
            // Enable/disable delete button based on checkbox
            confirmCheckbox.addEventListener('change', function() {
                deleteButton.disabled = !this.checked;
            });
            
            // Double confirmation on form submit
            deleteForm.addEventListener('submit', function(e) {
                if (!confirmCheckbox.checked) {
                    e.preventDefault();
                    return false;
                }
                
                const accountName = '@Model.Name';
                const emailCount = '@emailCount';
                
                const finalConfirm = confirm(
                    `FINAL WARNING!\n\n` +
                    `You are about to PERMANENTLY DELETE:\n` +
                    `• Account: "${accountName}"\n` +
                    `• ${emailCount} archived emails\n` +
                    `• All attachments and data\n\n` +
                    `This action CANNOT be undone!\n\n` +
                    `Are you absolutely sure?`
                );
                
                if (!finalConfirm) {
                    e.preventDefault();
                    return false;
                }
            });
        });
    </script>
}