@using MailArchiver.Models.ViewModels
@inject Microsoft.Extensions.Localization.IStringLocalizer<MailArchiver.SharedResource> Localizer
@model IEnumerable<MailArchiver.Models.User>
@{
    ViewData["Title"] = Localizer["Users"];
}
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3">@Localizer["Users"]</h1>
        <a asp-action="Create" class="btn btn-primary btn-sm">
            <i class="bi bi-plus-circle"></i>
            <span class="d-none d-sm-inline">@Localizer["CreateNewUser"]</span>
        </a>
    </div>
    @if (TempData["SuccessMessage"] != null)
    {<div class="alert alert-success alert-dismissible fade show" role="alert">@TempData["SuccessMessage"]<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>}
    @if (TempData["ErrorMessage"] != null)
    {<div class="alert alert-danger alert-dismissible fade show" role="alert">@TempData["ErrorMessage"]<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>}
    <div class="card d-none d-lg-block">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>@Localizer["Username"]</th>
                            <th>@Localizer["Email"]</th>
                            <th>@Localizer["Role"]</th>
                            <th>@Localizer["Status"]</th>
                            <th>@Localizer["Created"]</th>
                            <th>@Localizer["LastLogin"]</th>
                            <th class="text-center">@Localizer["Actions"]</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td><a asp-action="Details" asp-route-id="@item.Id">@item.Username</a></td>
                                <td>@item.Email</td>
                                <td>
                                    @if (item.IsAdmin)
                                    {
                                        @Localizer["Admin"]
                                    }
                                    else if (item.IsSelfManager)
                                    {
                                        @Localizer["SelfManager"]
                                    }
                                    else
                                    {
                                        @Localizer["User"]
                                    }
                                </td>
                                <td>
                                    @if (item.IsActive)
                                    {<span class="badge bg-success">@Localizer["Active"]</span>}
                                    else
                                    {<span class="badge bg-danger">@Localizer["Inactive"]</span>}
                                </td>
                                <td>@item.CreatedAt.ToString(System.Globalization.CultureInfo.CurrentUICulture.DateTimeFormat.ShortDatePattern)</td>
                                <td>@(item.LastLoginAt?.ToString(System.Globalization.CultureInfo.CurrentUICulture.DateTimeFormat.ShortDatePattern + " " + System.Globalization.CultureInfo.CurrentUICulture.DateTimeFormat.ShortTimePattern) ?? Localizer["Never"])</td>
                                <td>
                                    <div class="d-flex justify-content-center align-items-center gap-1">
                                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm d-flex align-items-center"><i class="bi bi-eye"></i><span class="ms-1">@Localizer["Details"]</span></a>
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm d-flex align-items-center"><i class="bi bi-pencil"></i><span class="ms-1">@Localizer["Edit"]</span></a>
                                        <a asp-action="AssignAccounts" asp-route-id="@item.Id" class="btn btn-primary btn-sm d-flex align-items-center"><i class="bi bi-envelope"></i><span class="ms-1">@Localizer["Assign"]</span></a>
                                        <form asp-action="ToggleActive" asp-route-id="@item.Id" method="post" class="d-inline">@Html.AntiForgeryToken()<button type="submit" class="btn @(item.IsActive ? "btn-outline-warning" : "btn-outline-success") btn-sm d-flex align-items-center"><i class="bi bi-@(item.IsActive ? "slash-circle" : "check-circle")"></i><span class="ms-1">@(item.IsActive ? Localizer["Disable"] : Localizer["Enable"])</span></button></form>
                                        <button type="button" class="btn btn-danger btn-sm d-flex align-items-center" data-bs-toggle="modal" data-bs-target="#deleteUserModal-@item.Id"><i class="bi bi-trash"></i><span class="ms-1">@Localizer["Delete"]</span></button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
</div>
</div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            @foreach (var item in Model)
            {
                <text>
                // Handle delete user confirmation for item @item.Id
                document.getElementById('deleteUserModal-@item.Id-Confirm').addEventListener('click', function() {
                    // Get the existing anti-forgery token from any form on the page
                    var existingToken = document.querySelector('input[name="__RequestVerificationToken"]');
                    
                    var form = document.createElement('form');
                    form.method = 'post';
                    form.action = '@Url.Action("Delete", "Users", new { id = item.Id })';
                    
                    // Add anti-forgery token
                    if (existingToken) {
                        var input = document.createElement('input');
                        input.type = 'hidden';
                        input.name = '__RequestVerificationToken';
                        input.value = existingToken.value;
                        form.appendChild(input);
                    }
                    
                    document.body.appendChild(form);
                    form.submit();
                });
                </text>
            }
        });
    </script>
    
    @foreach (var item in Model)
    {
        var deleteUserModal = new ModalViewModel
        {
            Id = "deleteUserModal-" + item.Id,
            Title = Localizer["Delete"].ToString(),
            Message = string.Format(Localizer["DeleteUserConfirm"].ToString(), item.Username),
            IncludeList = true,
            ListTitle1 = Localizer["WhatWillBeDeleted"].ToString(),
            ListItems1 = new List<string> {
                Localizer["DeleteItemUserConfig"].ToString()
            },
            ListTitle2 = Localizer["ThisAction"].ToString(),
            ListItems2 = new List<string> {
                Localizer["ActionCannotBeUndone"].ToString(),
                Localizer["ActionCannotBeRecovered"].ToString()
            },
            ShowWarning = true,
            WarningMessage = Localizer["DeletionCannotBeUndone"].ToString(),
            ConfirmButtonText = Localizer["Delete"].ToString(),
            ConfirmButtonClass = "btn-danger",
            CancelButtonText = Localizer["Cancel"].ToString()
        };
        
        @await Html.PartialAsync("_ModalTemplate", deleteUserModal)
    }
}
    <div class="d-lg-none">
        @foreach (var item in Model)
        {
            <div class="card mb-3">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-start mb-2">
                        <h6 class="card-title mb-0">@item.Username</h6>
                        @if (item.IsActive)
                        {<span class="badge bg-success">@Localizer["Active"]</span>}
                        else
                        {<span class="badge bg-danger">@Localizer["Inactive"]</span>}
                    </div>
                    <p class="card-text small text-muted mb-2">@item.Email</p>
                    <p class="card-text small mb-3"><strong>@Localizer["Role"]:</strong> 
                        @if (item.IsAdmin)
                        {
                            @Localizer["Admin"]
                        }
                        else if (item.IsSelfManager)
                        {
                            @Localizer["SelfManager"]
                        }
                        else
                        {
                            @Localizer["User"]
                        }
                    </p>
                    <p class="card-text small mb-2"><strong>@Localizer["Created"]:</strong> @item.CreatedAt.ToString(System.Globalization.CultureInfo.CurrentUICulture.DateTimeFormat.ShortDatePattern)</p>
                    <p class="card-text small mb-3"><strong>@Localizer["LastLogin"]:</strong> @(item.LastLoginAt?.ToString(System.Globalization.CultureInfo.CurrentUICulture.DateTimeFormat.ShortDatePattern + " " + System.Globalization.CultureInfo.CurrentUICulture.DateTimeFormat.ShortTimePattern) ?? Localizer["Never"])</p>
                    <div class="d-grid gap-2">
                        <div class="row g-2">
                            <div class="col-6"><a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info btn-sm w-100"><i class="bi bi-eye"></i> @Localizer["Details"]</a></div>
                            <div class="col-6"><a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-warning btn-sm w-100"><i class="bi bi-pencil"></i> @Localizer["Edit"]</a></div>
                        </div>
                        <div class="row g-2">
                            <div class="col-6"><a asp-action="AssignAccounts" asp-route-id="@item.Id" class="btn btn-outline-primary btn-sm w-100"><i class="bi bi-envelope"></i> @Localizer["Assign"]</a></div>
                            <div class="col-6"><form asp-action="ToggleActive" asp-route-id="@item.Id" method="post" class="w-100">@Html.AntiForgeryToken()<button type="submit" class="btn btn-outline-@(item.IsActive ? "warning" : "success") btn-sm w-100"><i class="bi bi-@(item.IsActive ? "slash-circle" : "check-circle")"></i> @(item.IsActive ? Localizer["Disable"] : Localizer["Enable"])</button></form></div>
                        </div>
                        <div class="row"><div class="col-12"><button type="button" class="btn btn-outline-danger btn-sm w-100" data-bs-toggle="modal" data-bs-target="#deleteUserModal-@item.Id"><i class="bi bi-trash"></i> @Localizer["Delete"]</button></div></div>
                    </div>
                </div>
            </div>
        }
        @if (!Model.Any())
        {
            <div class="text-center py-5">
                <div class="mb-3"><i class="bi bi-person-x display-1 text-muted"></i></div>
                <h5 class="text-muted">@Localizer["NoUsersFound"]</h5>
                <p class="text-muted">@Localizer["AddFirstUser"]</p>
                <div class="d-grid gap-2 d-md-flex justify-content-center">
                    <a asp-action="Create" class="btn btn-primary"><i class="bi bi-plus-circle"></i> @Localizer["CreateNewUser"]</a>
                </div>
            </div>
        }
    </div>
</div>
