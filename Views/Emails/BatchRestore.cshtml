@inject Microsoft.Extensions.Localization.IStringLocalizer<MailArchiver.SharedResource> Localizer
@model MailArchiver.Models.ViewModels.BatchRestoreViewModel
@{
    ViewData["Title"] = Localizer["BatchCopyEmailsTitle"];
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1>@Localizer["CopyMultipleEmailsToMailbox"]</h1>
        <a href="@(string.IsNullOrEmpty(Model.ReturnUrl) ? Url.Action("Index") : Model.ReturnUrl)"
            class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> @Localizer["Back"]
        </a>
    </div>

    <div class="card mb-4">
        <div class="card-header bg-light">
            <h5 class="mb-0">@Localizer["SelectedEmailsHeader"]</h5>
        </div>
        <div class="card-body">
            <p>@string.Format(Localizer["SelectedEmailsCountMessage"], Model.EmailCount)</p>
            @if (Model.EmailCount > 10)
            {
                <div class="alert alert-info">
                    <i class="bi bi-info-circle-fill me-2"></i>
                    @Localizer["BatchOperationMayTakeTime"]
                </div>
            }
        </div>
    </div>

    <div class="card">
        <div class="card-header bg-light">
            <h5 class="mb-0">@Localizer["TargetSettings"]</h5>
        </div>
        <div class="card-body">
            <form asp-action="BatchRestore" asp-controller="Emails" method="post">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
                @foreach (var id in Model.SelectedEmailIds)
                {
                    <input type="hidden" name="SelectedEmailIds" value="@id" />
                }
                <input type="hidden" asp-for="ReturnUrl" />
                <div class="mb-3">
                    <label asp-for="TargetAccountId" class="form-label">@Localizer["TargetAccount"]</label>
                    <select asp-for="TargetAccountId" asp-items="Model.AvailableAccounts" class="form-select" id="accountSelect">
                        <option value="">-- @Localizer["SelectAccount"] --</option>
                    </select>
                    <span asp-validation-for="TargetAccountId" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="TargetFolder" class="form-label">@Localizer["TargetFolder"]</label>
                    <select asp-for="TargetFolder" class="form-select" id="folderSelect">
                        @if (Model.AvailableFolders != null && Model.AvailableFolders.Any())
                        {
                            @foreach (var folder in Model.AvailableFolders)
                            {
                                <option value="@folder.Value" selected="@folder.Selected">@folder.Text</option>
                            }
                        }
                        else
                        {
                            <option value="">-- @Localizer["SelectAccountFirst"] --</option>
                            <option value="INBOX">INBOX</option>
                        }
                    </select>
                    <div class="form-text">
                        @Localizer["SelectAccountToViewFolders"]
                    </div>
                    <span asp-validation-for="TargetFolder" class="text-danger"></span>
                </div>
                <div class="alert alert-info">
                    <i class="bi bi-info-circle-fill me-2"></i>
                    @Localizer["CopyMultipleEmailsInfo"]
                </div>
                <div class="d-flex mt-4">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-envelope-arrow-up me-2"></i>@Localizer["CopyEmailsButton"]
                    </button>
                    <a href="@(string.IsNullOrEmpty(Model.ReturnUrl) ? Url.Action("Index") : Model.ReturnUrl)"
                        class="btn btn-outline-secondary ms-2">
                        @Localizer["Cancel"]
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            $('#accountSelect').change(function () {
                var accountId = $(this).val();
                if (accountId) {
                    $('#folderSelect').html('<option>@Localizer["LoadingFolders"]</option>');
                    $.ajax({
                        url: '@Url.Action("GetFolders", "Emails")',
                        data: { accountId: accountId },
                        type: 'GET',
                        dataType: 'json',
                        success: function (data) {
                            var options = '<option value="">-- @Localizer["SelectFolder"] --</option>';
                            var inboxFound = false;
                            $.each(data, function (index, folderName) {
                                options += '<option value="' + folderName + '">' + folderName + '</option>';
                                if (folderName.toUpperCase() === 'INBOX') { inboxFound = true; }
                            });
                            $('#folderSelect').html(options);
                            if (inboxFound) { $("#folderSelect option").filter(function () { return this.value.toUpperCase() === 'INBOX'; }).prop('selected', true); }
                        },
                        error: function () {
                            $('#folderSelect').html('<option value="">@Localizer["ErrorLoadingFolders"]</option><option value="INBOX">INBOX</option>');
                        }
                    });
                } else {
                    $('#folderSelect').html('<option value="">@Localizer["SelectAccountFirst"]</option>');
                }
            });
            if ($('#accountSelect').val()) { $('#accountSelect').trigger('change'); }
        });
    </script>
}
