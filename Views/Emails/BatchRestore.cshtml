@model MailArchiver.Models.ViewModels.BatchRestoreViewModel
@{
    ViewData["Title"] = "Batch Copy Emails";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1>Copy Multiple Emails to Mailbox</h1>
        <a href="@(string.IsNullOrEmpty(Model.ReturnUrl) ? Url.Action("Index") : Model.ReturnUrl)"
            class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> Back
        </a>
    </div>

    <div class="card mb-4">
        <div class="card-header bg-light">
            <h5 class="mb-0">Selected Emails</h5>
        </div>
        <div class="card-body">
            <p>You have selected <strong>@Model.EmailCount</strong> emails to copy to a mailbox folder.</p>

            @if (Model.EmailCount > 10)
            {
                <div class="alert alert-info">
                    <i class="bi bi-info-circle-fill me-2"></i>
                    This operation may take some time depending on the number of emails and their sizes.
                </div>
            }
        </div>
    </div>

    <div class="card">
        <div class="card-header bg-light">
            <h5 class="mb-0">Target Settings</h5>
        </div>
        <div class="card-body">
            <form asp-action="BatchRestore" asp-controller="Emails" method="post">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                @foreach (var id in Model.SelectedEmailIds)
                {
                    <input type="hidden" name="SelectedEmailIds" value="@id" />
                }
                <input type="hidden" asp-for="ReturnUrl" />

                <div class="mb-3">
                    <label asp-for="TargetAccountId" class="form-label">Target Account</label>
                    <select asp-for="TargetAccountId" asp-items="Model.AvailableAccounts" class="form-select"
                        id="accountSelect">
                        <option value="">-- Select Account --</option>
                    </select>
                    <span asp-validation-for="TargetAccountId" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="TargetFolder" class="form-label">Target Folder</label>
                    <select asp-for="TargetFolder" class="form-select" id="folderSelect">
                        @if (Model.AvailableFolders != null && Model.AvailableFolders.Any())
                        {
                            @foreach (var folder in Model.AvailableFolders)
                            {
                                <option value="@folder.Value" selected="@folder.Selected">@folder.Text</option>
                            }
                        }
                        else
                        {
                            <option value="">-- Select Account First --</option>
                            <option value="INBOX">INBOX</option>
                        }
                    </select>
                    <div class="form-text">
                        Select a mail account first to view available folders.
                    </div>
                    <span asp-validation-for="TargetFolder" class="text-danger"></span>
                </div>

                <div class="alert alert-info">
                    <i class="bi bi-info-circle-fill me-2"></i>
                    This function copies the selected archived emails to the specified folder of the target account.
                    The emails will remain in the archive.
                </div>

                <div class="d-flex mt-4">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-envelope-arrow-up me-2"></i>Copy Emails
                    </button>
                    <a href="@(string.IsNullOrEmpty(Model.ReturnUrl) ? Url.Action("Index") : Model.ReturnUrl)"
                        class="btn btn-outline-secondary ms-2">
                        Cancel
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            console.log("Restore view script initialized");

            // Initialisierung - prüfen, ob bereits ein Konto ausgewählt ist
            if ($('#accountSelect').val()) {
                console.log("Initial account selected: " + $('#accountSelect').val());
                loadFolders($('#accountSelect').val());
            }

            // Event-Handler für Änderungen am Konto-Dropdown
            $('#accountSelect').change(function () {
                var accountId = $(this).val();
                console.log("Account changed to: " + accountId);
                if (accountId) {
                    loadFolders(accountId);
                } else {
                    // Zurücksetzen des Folder-Dropdowns, wenn kein Konto ausgewählt ist
                    $('#folderSelect').html('<option value="">-- Select Account First --</option>');
                }
            });

            // Funktion zum Laden der Ordner für ein bestimmtes Konto
            function loadFolders(accountId) {
                // Ladezustand anzeigen
                $('#folderSelect').html('<option>Loading folders...</option>');

                // AJAX-Anfrage zum Laden der Ordner
                $.getJSON('@Url.Action("GetFolders", "Emails")?accountId=' + accountId, function (data) {
                    console.log("Folders loaded: " + data.length + " folders");

                    // Optionen für den Dropdown erstellen
                    var options = '<option value="">-- Select Folder --</option>';

                    // Prüfen, ob ein INBOX-Ordner existiert
                    var hasInbox = false;
                    var inboxOption = null;

                    // Alle Ordner durchgehen und Optionen erstellen
                    $.each(data, function (index, folder) {
                        var option = '<option value="' + folder + '">' + folder + '</option>';
                        options += option;

                        // INBOX-Ordner identifizieren (case insensitive)
                        if (folder.toUpperCase() === 'INBOX') {
                            hasInbox = true;
                            inboxOption = folder;
                        }
                    });

                    // Dropdown aktualisieren
                    $('#folderSelect').html(options);

                    // INBOX automatisch auswählen, wenn vorhanden
                    if (hasInbox) {
                        $('#folderSelect').val(inboxOption);
                        console.log("Auto-selected INBOX folder");
                    }
                })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        console.error("Error loading folders: " + textStatus + ", " + errorThrown);
                        $('#folderSelect').html('<option value="">Error loading folders</option><option value="INBOX">INBOX</option>');
                    });
            }
        });
    </script>
}