@inject Microsoft.Extensions.Localization.IStringLocalizer<MailArchiver.SharedResource> Localizer
@model List<string>
@{
    ViewData["Title"] = @Localizer["BackupCodes"];
}

<div class="container twofa-setup-container">
    <h1>@Localizer["BackupCodes"]</h1>
    
    <div class="alert alert-warning">
        <p><strong>@Localizer["BackupCodesWarning"]</strong></p>
        <p>@Localizer["BackupCodesOneTimeOnly"]</p>
    </div>
    
    <div class="twofa-section">
        <p>@Localizer["BackupCodesDescription"]</p>
        
        <div class="twofa-backup-codes">
            @foreach (var code in Model)
            {
                <div class="twofa-backup-code">@code</div>
            }
        </div>
        
        <div class="twofa-button-container">
            <button id="downloadBackupCodes" class="btn btn-success twofa-download-btn">
                <i class="bi bi-download"></i> @Localizer["DownloadBackupCodes"]
            </button>
        </div>
    </div>
    
    <div class="twofa-section">
        <div class="twofa-button-container">
            <a asp-controller="Home" asp-action="Index" class="btn btn-primary">@Localizer["ContinueToDashboard"]</a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Pass localized strings to JavaScript (using Html.Raw to prevent HTML encoding)
        const backupCodesFileHeader = '@Html.Raw(Localizer["BackupCodesFileHeader"].Value)';
        const backupCodesFileFooter = '@Html.Raw(Localizer["BackupCodesFileFooter"].Value)';
        
        document.getElementById('downloadBackupCodes').addEventListener('click', function() {
            // Get backup codes from the page
            const backupCodes = [];
            document.querySelectorAll('.twofa-backup-code').forEach(function(element) {
                backupCodes.push(element.textContent);
            });
            
            // Create file content
            const content = backupCodesFileHeader + '\n\n' + 
                           backupCodes.join('\n') + 
                           '\n\n' + backupCodesFileFooter;
            
            // Create and download file with UTF-8 encoding
            const blob = new Blob([content], { type: 'text/plain;charset=utf-8' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'mailarchiver-backup-codes.txt';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            window.URL.revokeObjectURL(url);
        });
    </script>
}
