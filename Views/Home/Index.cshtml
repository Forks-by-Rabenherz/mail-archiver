@using MailArchiver.Services
@inject IAuthenticationService AuthService
@inject Microsoft.Extensions.Localization.IStringLocalizer<MailArchiver.SharedResource> Localizer
@model MailArchiver.Models.ViewModels.DashboardViewModel
@{
    ViewData["Title"] = Localizer["Dashboard"]; }

<div class="container-fluid">
    <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-4 gap-2">
        <h1 class="h3 mb-0">@Localizer["Dashboard"]</h1>
        <div>
            <a asp-controller="Emails" asp-action="Index" class="btn btn-primary btn-sm">
                <i class="bi bi-search"></i> <span class="d-none d-sm-inline">@Localizer["Search"]</span> @Localizer["Archive"]
            </a>
        </div>
    </div>

    @if (AuthService.IsCurrentUserAdmin(Context) && ViewBag.ActiveJobsCount != null && ViewBag.ActiveJobsCount > 0)
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="alert alert-info alert-dismissible fade show">
                    <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center gap-2">
                        <div>
                            <i class="bi bi-clock-history me-2"></i>
                            <strong>@Localizer["BackgroundJobsActive"]</strong> @ViewBag.ActiveJobsCount job(s) are currently running.
                        </div>
                        <div>
                            <a asp-controller="Emails" asp-action="Jobs" class="btn btn-outline-primary btn-sm">
                                <i class="bi bi-eye me-1"></i> @Localizer["ViewJobs"]
                            </a>
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="row mb-4">
        <div class="col-6 col-md-3 mb-3">
            <div class="card bg-primary text-white h-100">
                <div class="card-body p-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title mb-1">@Localizer["Emails"]</h6>
                            <h5 class="mb-0">@Model.TotalEmails.ToString("N0")</h5>
                        </div>
                        <i class="bi bi-envelope fs-1 opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3 mb-3">
            <div class="card bg-success text-white h-100">
                <div class="card-body p-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title mb-1">@Localizer["Accounts"]</h6>
                            <h5 class="mb-0">@Model.TotalAccounts.ToString("N0")</h5>
                        </div>
                        <i class="bi bi-person fs-1 opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3 mb-3">
            <div class="card bg-info text-white h-100">
                <div class="card-body p-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title mb-1">@Localizer["AttachmentsCount"]</h6>
                            <h5 class="mb-0">@Model.TotalAttachments.ToString("N0")</h5>
                        </div>
                        <i class="bi bi-paperclip fs-1 opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3 mb-3">
            <div class="card bg-warning text-dark h-100">
                <div class="card-body p-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title mb-1">@Localizer["Storage"]</h6>
                            <h5 class="mb-0">@Model.TotalStorageUsed</h5>
                        </div>
                        <i class="bi bi-hdd fs-1 opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-12 col-lg-8 mb-4">
            <div class="card h-100">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <span class="h6 mb-0">@Localizer["EmailsPerMonth"]</span>
                    <span class="badge bg-primary">@Localizer["Last12Months"]</span>
                </div>
                <div class="card-body">
                    <div class="chart-container">
                        <canvas id="monthlyChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-lg-4 mb-4">
            <div class="card h-100">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <span class="h6 mb-0">@Localizer["TopSenders"]</span>
                    <span class="badge bg-primary">@Localizer["Incoming"]</span>
                </div>
                <div class="card-body">
                    <div class="chart-container">
                        <canvas id="topSendersChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12 col-lg-6 mb-4">
            <div class="card h-100">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <span class="h6 mb-0">@Localizer["AccountOverview"]</span>
                    <a asp-controller="MailAccounts" asp-action="Index" class="btn btn-sm btn-outline-primary">@Localizer["ShowAll"]</a>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive d-none d-md-block">
                        <table class="table table-sm table-striped table-hover mb-0">
                            <thead>
                                <tr>
                                    <th>@Localizer["Name"]</th>
                                    <th class="d-none d-lg-table-cell">@Localizer["EmailAddress"]</th>
                                    <th>@Localizer["Count"]</th>
                                    <th>@Localizer["LastSync"]</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var account in Model.EmailsPerAccount)
                                {
                                    <tr>
                                        <td>@account.AccountName</td>
                                        <td class="d-none d-lg-table-cell small">@account.EmailAddress</td>
                                        <td>@account.EmailCount.ToString("N0")</td>
                                        <td>
                                            @if (DateTime.Now.Subtract(account.LastSyncTime).TotalHours < 24)
                                            {
                                                <span class="badge bg-success small">
                                                    <span class="utc-timestamp" data-utc-time="@account.LastSyncTime.ToString("yyyy-MM-ddTHH:mm:ss")">
                                                        @account.LastSyncTime.ToString("yyyy-MM-dd HH:mm")
                                                    </span>
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-warning small">
                                                    <span class="utc-timestamp" data-utc-time="@account.LastSyncTime.ToString("yyyy-MM-ddTHH:mm:ss")">
                                                        @account.LastSyncTime.ToString("yyyy-MM-dd HH:mm")
                                                    </span>
                                                </span>
                                            }
                                        </td>
                                    </tr>
                                }
                                @if (!Model.EmailsPerAccount.Any())
                                {
                                    <tr>
                                        <td colspan="4" class="text-center py-3 text-muted">
                                            <i class="bi bi-info-circle me-2"></i>@Localizer["NoEmailAccountsFound"]
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="d-md-none">
                        @foreach (var account in Model.EmailsPerAccount)
                        {
                            <div class="border-bottom px-3 py-2">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div class="flex-grow-1">
                                        <h6 class="mb-1">@account.AccountName</h6>
                                        <p class="mb-1 small text-muted">@account.EmailAddress</p>
                                        <p class="mb-0 small">
                                            <strong>@account.EmailCount.ToString("N0")</strong> @Localizer["Emails"]
                                        </p>
                                    </div>
                                    <div class="text-end">
                                        @if (DateTime.Now.Subtract(account.LastSyncTime).TotalHours < 24)
                                        {
                                            <span class="badge bg-success">
                                                <span class="utc-timestamp" data-utc-time="@account.LastSyncTime.ToString("yyyy-MM-ddTHH:mm:ss")">
                                                    @account.LastSyncTime.ToString("yyyy-MM-dd HH:mm")
                                                </span>
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning">
                                                <span class="utc-timestamp" data-utc-time="@account.LastSyncTime.ToString("yyyy-MM-ddTHH:mm:ss")">
                                                    @account.LastSyncTime.ToString("yyyy-MM-dd HH:mm")
                                                </span>
                                            </span>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                        @if (!Model.EmailsPerAccount.Any())
                        {
                            <div class="text-center py-4 text-muted">
                                <i class="bi bi-info-circle me-2"></i>@Localizer["NoEmailAccountsFound"]
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-lg-6 mb-4">
            <div class="card h-100">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <span class="h6 mb-0">@Localizer["RecentEmails"]</span>
                    <a asp-controller="Emails" asp-action="Index" class="btn btn-sm btn-outline-primary">@Localizer["ShowAll"]</a>
                </div>
                <div class="card-body p-0">
                    <div class="list-group list-group-flush">
                        @foreach (var email in Model.RecentEmails)
                        {
                            <a href="@Url.Action("Details", "Emails", new { id = email.Id })" class="list-group-item list-group-item-action">
                                <div class="d-flex w-100 justify-content-between align-items-start">
                                    <div class="flex-grow-1 me-2">
                                        <h6 class="mb-1 text-truncate">
                                            @if(email.IsOutgoing)
                                            {
                                                <i class="bi bi-arrow-up-right text-primary"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-arrow-down-left text-success"></i>
                                            }
                                            @email.Subject
                                        </h6>
                                        <p class="mb-1 small text-truncate">@email.From</p>
                                        <small class="text-muted">
                                            <i class="bi bi-person me-1"></i>@email.MailAccount.Name
                                        </small>
                                    </div>
                                    <small class="text-muted text-nowrap">@email.SentDate.ToString("yyyy-MM-dd HH:mm")</small>
                                </div>
                            </a>
                        }
                        @if (!Model.RecentEmails.Any())
                        {
                            <div class="list-group-item text-center py-4 text-muted">
                                <i class="bi bi-inbox me-2"></i>@Localizer["NoEmailsArchivedYet"]
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h6 class="mb-0">@Localizer["QuickActions"]</h6>
                </div>
                <div class="card-body">
                    <div class="row g-2">
                        <div class="col-6 col-md-3">
                            <a asp-controller="Emails" asp-action="Index" class="btn btn-outline-primary w-100">
                                <i class="bi bi-search d-block mb-1"></i>
                                <small>@Localizer["SearchArchive"]</small>
                            </a>
                        </div>
                        <div class="col-6 col-md-3">
                            <a asp-controller="MailAccounts" asp-action="Create" class="btn btn-outline-success w-100">
                                <i class="bi bi-plus-circle d-block mb-1"></i>
                                <small>@Localizer["AddAccount"]</small>
                            </a>
                        </div>
                        <div class="col-6 col-md-3">
                            <a asp-controller="MailAccounts" asp-action="Index" class="btn btn-outline-info w-100">
                                <i class="bi bi-person-gear d-block mb-1"></i>
                                <small>@Localizer["ManageAccounts"]</small>
                            </a>
                        </div>
                        @if (AuthService.IsCurrentUserAdmin(Context))
                        {
                            <div class="col-6 col-md-3">
                                <a asp-controller="Emails" asp-action="Jobs" class="btn btn-outline-warning w-100 position-relative">
                                    <i class="bi bi-clock-history d-block mb-1"></i>
                                    <small>@Localizer["BackgroundJobs"]</small>
                                    @if (ViewBag.ActiveJobsCount != null && ViewBag.ActiveJobsCount > 0)
                                    {
                                        <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                            @ViewBag.ActiveJobsCount
                                            <span class="visually-hidden">@Localizer["ActiveJobs"]</span>
                                        </span>
                                    }
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
     <script src="~/lib/chart.js/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Chart colors
            const chartColors = {
                blue: 'rgba(13, 110, 253, 0.8)',
                blueBorder: 'rgba(13, 110, 253, 1)',
                colors: [
                    'rgba(220, 53, 69, 0.8)',   // Red
                    'rgba(13, 110, 253, 0.8)',  // Blue
                    'rgba(255, 193, 7, 0.8)',   // Yellow
                    'rgba(25, 135, 84, 0.8)',   // Green
                    'rgba(102, 16, 242, 0.8)',  // Purple
                    'rgba(253, 126, 20, 0.8)',  // Orange
                    'rgba(111, 66, 193, 0.8)',  // Indigo
                    'rgba(214, 51, 132, 0.8)',  // Pink
                    'rgba(32, 201, 151, 0.8)',  // Teal
                    'rgba(111, 66, 193, 0.8)'   // Cyan
                ],
                colorsBorder: [
                    'rgba(220, 53, 69, 1)',
                    'rgba(13, 110, 253, 1)',
                    'rgba(255, 193, 7, 1)',
                    'rgba(25, 135, 84, 1)',
                    'rgba(102, 16, 242, 1)',
                    'rgba(253, 126, 20, 1)',
                    'rgba(111, 66, 193, 1)',
                    'rgba(214, 51, 132, 1)',
                    'rgba(32, 201, 151, 1)',
                    'rgba(111, 66, 193, 1)'
                ]
            };

            // Monthly Emails Chart
            const monthlyChartCanvas = document.getElementById('monthlyChart');
            if (monthlyChartCanvas) {
                const monthlyChart = new Chart(monthlyChartCanvas.getContext('2d'), {
                    type: 'bar',
                    data: {
                        labels: [@Html.Raw(string.Join(",", Model.EmailsByMonth.Select(m => $"'{m.Period}'")))],
                        datasets: [{
                            label: 'Emails',
                            data: [@string.Join(",", Model.EmailsByMonth.Select(m => m.Count))],
                            backgroundColor: chartColors.blue,
                            borderColor: chartColors.blueBorder,
                            borderWidth: 1,
                            borderRadius: 4
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false
                            }
                        },
                        scales: {
                            x: {
                                ticks: {
                                    maxRotation: 45,
                                    minRotation: 0,
                                    font: {
                                        size: window.innerWidth < 768 ? 10 : 12
                                    }
                                }
                            },
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    precision: 0,
                                    font: {
                                        size: window.innerWidth < 768 ? 10 : 12
                                    }
                                }
                            }
                        }
                    }
                });
            }

            // Top Senders Chart
            const topSendersChartCanvas = document.getElementById('topSendersChart');
            if (topSendersChartCanvas) {
                const topSendersChart = new Chart(topSendersChartCanvas.getContext('2d'), {
                    type: 'doughnut',
                    data: {
                        labels: [@Html.Raw(string.Join(",", Model.TopSenders.Select(s => $"'{(s.EmailAddress.Length > 25 ? s.EmailAddress.Substring(0, 25) + "..." : s.EmailAddress)}'")))],
                        datasets: [{
                            data: [@string.Join(",", Model.TopSenders.Select(s => s.Count))],
                            backgroundColor: chartColors.colors,
                            borderColor: chartColors.colorsBorder,
                            borderWidth: 1,
                            hoverOffset: 4
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'bottom',
                                labels: {
                                    boxWidth: 12,
                                    font: {
                                        size: window.innerWidth < 768 ? 9 : 11
                                    },
                                    padding: window.innerWidth < 768 ? 10 : 15
                                }
                            },
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        let label = context.label || '';
                                        let value = context.parsed || 0;
                                        let total = context.dataset.data.reduce((a, b) => a + b, 0);
                                        let percentage = total > 0 ? Math.round((value * 100) / total) : 0;
                                        return `${label}: ${value} (${percentage}%)`;
                                    }
                                }
                            }
                        }
                    }
                });
            }

            // Auto-refresh dashboard if there are active jobs
            @if (ViewBag.ActiveJobsCount != null && ViewBag.ActiveJobsCount > 0)
            {
                @:// Refresh page every 30 seconds if there are active jobs
                @:setTimeout(function() {
                @:    location.reload();
                @:}, 30000);
            }
        });
    </script>
}

